[project]
name = "robotology-superbuild"
# As this version is currently ignored, we do not
# waste effort in mantain it in synch with the value
# specified in CMakeLists.txt
version = "0.0.0"
description = "CMake/YCM-based superbuild to simplify the build process of robotology projects."
authors = ["Silvio Traversaro <silvio@traversaro.it>"]
channels = ["conda-forge", "robotology"]
platforms = ["linux-64", "linux-aarch64", "win-64", "osx-64", "osx-arm64"]

[system-requirements]
linux = "4.18"

[activation.env]
# This is a single place where CMAKE_BUILD_TYPE is defined, change its value here and
# delete .build or .build-ros2 to change build type 
CMAKE_BUILD_TYPE = "Release"

[feature.base.activation]
scripts = ["pixi_activation.sh", ".build/install/share/robotology-superbuild/setup.sh"]

[feature.base.target.win-64.activation]
scripts = ["pixi_activation.bat", ".build/install/share/robotology-superbuild/setup.bat"]

[feature.ros2.activation]
scripts = ["pixi_activation.sh", ".build-ros2/install/share/robotology-superbuild/setup.sh"]

[feature.ros2.target.win-64.activation]
scripts = ["pixi_activation.bat", ".build-ros2/install/share/robotology-superbuild/setup.bat"]

[feature.ros2moveit.activation]
scripts = ["pixi_activation.sh", ".build-ros2moveit/install/share/robotology-superbuild/setup.sh"]

#[feature.ros2moveit.target.win-64.activation]
#scripts = ["pixi_activation.bat", ".build-ros2moveit/install/share/robotology-superbuild/setup.bat"]


[tasks]
configure = { cmd = [
    "cmake",
    # Use the cross-platform Ninja generator
    "-G",
    "Ninja",
    # The source is in the root directory
    "-S",
    ".",
    # We wanna build in the .build directory
    "-B",
    ".build",
]}

configure-all = { cmd = [
    "cmake",
    # Enable all options
    "-DROBOTOLOGY_ENABLE_ROBOT_TESTING:BOOL=ON",
    "-DROBOTOLOGY_ENABLE_DYNAMICS:BOOL=ON",
    "-DROBOTOLOGY_ENABLE_DYNAMICS_FULL_DEPS:BOOL=ON",
    "-DROBOTOLOGY_ENABLE_TELEOPERATION:BOOL=ON",
    "-DROBOTOLOGY_ENABLE_ICUB_HEAD:BOOL=ON",
    "-DROBOTOLOGY_ENABLE_HUMAN_DYNAMICS:BOOL=ON",
    "-DROBOTOLOGY_USES_PYTHON:BOOL=ON",
    "-DROBOTOLOGY_USES_GAZEBO:BOOL=ON",
    "-DROBOTOLOGY_USES_PCL_AND_VTK:BOOL=ON",
    "-DROBOTOLOGY_USES_GZ:BOOL=ON",
    "-DROBOTOLOGY_USES_ESDCAN:BOOL=$ROBOTOLOGY_USES_ESDCAN",
    # This options are currently not supported in pixi
    "-DROBOTOLOGY_USES_ROS2:BOOL=OFF",
    "-DROBOTOLOGY_USES_MOVEIT:BOOL=OFF",
    # Use the cross-platform Ninja generator
    "-G",
    "Ninja",
    # The source is in the root directory
    "-S",
    ".",
    # We wanna build in the .build directory
    "-B",
    ".build",
]}

# We limit the number of concurrent ninja builds to 1 as the superbuild will run one project at the time,
# and each project will run itself a number of compilation threads equal to ninja defaults,
# if we do not do this there is an high change that the system running out of memory
# if you want to run with a custom number of threads, run pixi run cmake --build .build --parallel N
build = { cmd = "cmake --build .build --parallel 1", depends-on = ["configure"] }
build-all = { cmd = "cmake --build .build --parallel 1", depends-on = ["configure-all"] }


[dependencies]

# C++ dev dependencies
compilers = "*"
ninja = "*"
cmake = "*"
make  = "*"
pkg-config = "*"

# C++ libraries dependencies
ace = "*"
asio = "*"
assimp = "*"
libboost-devel = "*"
cli11 = "*"
eigen = "*"
freetype = "*"
glew = "*"
glfw = "*"
glm = "*"
graphviz = "*"
gsl = "*"
ipopt = ">=3.13.0"
irrlicht = "*"
libjpeg-turbo = "*"
libmatio = "*"
libode = "*"
libxml2 = "*"
nlohmann_json = "*"
qhull = "*"
pcl = "*"
libopencv = "*"
opencv = "*"
portaudio = "*"
qt-main = "*"
sdl = "*"
sdl2 = "*"
sqlite = "*"
tinyxml = "*"
tinyxml2 = "*"
spdlog = "*"
lua = "*"
soxr = "*"
tomlplusplus = "*"
libzlib = "*"
ffmpeg = "*"
onnxruntime-cpp = "*"
vtk = "*"

# ROBOTOLOGY_USES_GAZEBO
gazebo = "*"

# ROBOTOLOGY_USES_GZ
gz-sim8 = "*"

# ROBOTOLOGY_USES_PYTHON
python = "*"
pip = "*"
numpy = "*"
swig = "*"
pybind11 = "*"
pyqt = "*"
matplotlib = "*"
h5py = "*"
tornado = "*"
u-msgpack-python = "*"
pyzmq = "*"
ipython = "*"
gst-plugins-good = "*"
gst-plugins-bad = "*"
pyqtwebengine = "*"
qtpy = "*"
pyyaml = "*"


[target.win-64.dependencies]
freeglut = "*"
# ROBOTOLOGY_USES_ESDCAN
esdcan = { version = "*", channel = "robotology" }

[target.linux-64.dependencies]
bash-completion = "*"
freeglut = "*"
libdc1394 = "*"
libi2c = "*"
libgl-devel = "*"

[target.linux-aarch64.dependencies]
bash-completion = "*"
freeglut = "*"
libdc1394 = "*"
libi2c = "*"
libgl-devel = "*"

[feature.base.dependencies]
# These additional constraints are incompatible with robostack
# packages as of November 2024
pcl = ">=1.11.1"
libopencv = ">=4.10.0"

# As the ROS 2 dependencies are hosted on robostack and can lag behind
# all the different conda-forge ABI migrations, we use a separate ros2
# environment to test them
[feature.ros2]
channels = [{channel = "robostack-staging", priority = -1}]

# osx-arm64 is not supported due to an incompatibility with gz-sim8
# as of November 2024
platforms = ["linux-64", "linux-aarch64", "win-64", "osx-64"]


[feature.ros2moveit]
channels = [{channel = "robostack-staging", priority = -1}]

# All platforms except for linux-64 are not supported as robostack does not have a build of
# ros-humble-moveit-visual-tools  as of November 2024
platforms = ["linux-64"]


[feature.ros2.dependencies]
# ROBOTOLOGY_ENABLE_ROS2 dependencies
ros-humble-ros-base = "*"
ros-humble-test-msgs = "*"


[feature.ros2moveit.dependencies]
# ROBOTOLOGY_ENABLE_ROS2 dependencies
ros-humble-ros-base = "*"
ros-humble-test-msgs = "*"

# ROBOTOLOGY_ENABLE_MOVEIT dependencies
ros-humble-moveit = "*"
ros-humble-hardware-interface = "*"
ros-humble-moveit-visual-tools = "*"
ros-humble-gazebo-msgs = "*"
ros-humble-controller-manager = "*"

# Ideally we should not duplicate the tasks for each feature, but unfortunatly this is currently required
[feature.ros2.tasks]

configure-ros2 = { cmd = [
    "cmake",
    # Use the cross-platform Ninja generator
    "-G",
    "Ninja",
    # The source is in the root directory
    "-S",
    ".",
    # We wanna build in the .build directory
    "-B",
    ".build-ros2",
    "-DROBOTOLOGY_USES_ROS2:BOOL=ON",
    "-DROBOTOLOGY_USES_MOVEIT:BOOL=OFF",
]}

configure-all-ros2 = { cmd = [
    "cmake",
    # Enable all options
    "-DROBOTOLOGY_ENABLE_ROBOT_TESTING:BOOL=ON",
    "-DROBOTOLOGY_ENABLE_DYNAMICS:BOOL=ON",
    "-DROBOTOLOGY_ENABLE_DYNAMICS_FULL_DEPS:BOOL=ON",
    "-DROBOTOLOGY_ENABLE_TELEOPERATION:BOOL=ON",
    "-DROBOTOLOGY_ENABLE_ICUB_HEAD:BOOL=ON",
    "-DROBOTOLOGY_ENABLE_HUMAN_DYNAMICS:BOOL=ON",
    "-DROBOTOLOGY_USES_PYTHON:BOOL=ON",
    "-DROBOTOLOGY_USES_GAZEBO:BOOL=ON",
    "-DROBOTOLOGY_USES_PCL_AND_VTK:BOOL=ON",
    "-DROBOTOLOGY_USES_GZ:BOOL=ON",
    "-DROBOTOLOGY_USES_ESDCAN:BOOL=$ROBOTOLOGY_USES_ESDCAN",
    "-DROBOTOLOGY_USES_ROS2:BOOL=ON",
    "-DROBOTOLOGY_USES_MOVEIT:BOOL=OFF",
    # Use the cross-platform Ninja generator
    "-G",
    "Ninja",
    # The source is in the root directory
    "-S",
    ".",
    # We wanna build in the .build directory
    "-B",
    ".build-ros2",
]}

# We limit the number of concurrent ninja builds to 1 as the superbuild will run one project at the time,
# and each project will run itself a number of compilation threads equal to ninja defaults,
# if we do not do this there is an high change that the system running out of memory
# if you want to run with a custom number of threads, run pixi run cmake --build .build-ros2 --parallel N
build-ros2 = { cmd = "cmake --build .build-ros2 --parallel 1", depends-on = ["configure-ros2"] }
build-all-ros2 = { cmd = "cmake --build .build-ros2 --parallel 1", depends-on = ["configure-all-ros2"] }


# Ideally we should not duplicate the tasks for each feature, but unfortunatly this is currently required
[feature.ros2moveit.tasks]
configure-ros2moveit = { cmd = [
    "cmake",
    # Use the cross-platform Ninja generator
    "-G",
    "Ninja",
    # The source is in the root directory
    "-S",
    ".",
    # We wanna build in the .build directory
    "-B",
    ".build-ros2moveit",
    "-DROBOTOLOGY_USES_ROS2:BOOL=ON",
    "-DROBOTOLOGY_USES_MOVEIT:BOOL=ON",
]}

configure-all-ros2moveit = { cmd = [
    "cmake",
    # Enable all options
    "-DROBOTOLOGY_ENABLE_ROBOT_TESTING:BOOL=ON",
    "-DROBOTOLOGY_ENABLE_DYNAMICS:BOOL=ON",
    "-DROBOTOLOGY_ENABLE_DYNAMICS_FULL_DEPS:BOOL=ON",
    "-DROBOTOLOGY_ENABLE_TELEOPERATION:BOOL=ON",
    "-DROBOTOLOGY_ENABLE_ICUB_HEAD:BOOL=ON",
    "-DROBOTOLOGY_ENABLE_HUMAN_DYNAMICS:BOOL=ON",
    "-DROBOTOLOGY_USES_PYTHON:BOOL=ON",
    "-DROBOTOLOGY_USES_GAZEBO:BOOL=ON",
    "-DROBOTOLOGY_USES_PCL_AND_VTK:BOOL=ON",
    "-DROBOTOLOGY_USES_GZ:BOOL=ON",
    "-DROBOTOLOGY_USES_ESDCAN:BOOL=$ROBOTOLOGY_USES_ESDCAN",
    "-DROBOTOLOGY_USES_ROS2:BOOL=ON",
    "-DROBOTOLOGY_USES_MOVEIT:BOOL=ON",
    # Use the cross-platform Ninja generator
    "-G",
    "Ninja",
    # The source is in the root directory
    "-S",
    ".",
    # We wanna build in the .build directory
    "-B",
    ".build-ros2moveit",
]}

# We limit the number of concurrent ninja builds to 1 as the superbuild will run one project at the time,
# and each project will run itself a number of compilation threads equal to ninja defaults,
# if we do not do this there is an high change that the system running out of memory
# if you want to run with a custom number of threads, run pixi run cmake --build .build-ros2 --parallel N
build-ros2moveit = { cmd = "cmake --build .build-ros2moveit --parallel 1", depends-on = ["configure-ros2moveit"] }
build-all-ros2moveit = { cmd = "cmake --build .build-ros2moveit --parallel 1", depends-on = ["configure-all-ros2moveit"] }

# We have two environments:
# * The `default` one, used for all the options that do not depend on ROS 2
# * The `ros2` one, used for all the options including the one that depend on ROS 2
# * The `ros2moveit` one, used for all the options including the one that depend on ROS 2 and MoveIt
[environments]
default = ["base"]
ros2 = ["ros2"]
ros2moveit = ["ros2moveit"]
