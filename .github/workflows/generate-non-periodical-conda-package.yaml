name: Generate non periodical conda packages
# This action automatically generate conda packages for the packages in the robotology-superbuild
# Check doc/conda-recipe-generation.md for more info

on:
  workflow_dispatch:
    inputs:
      upload_conda_binaries:
        description: 'If true, upload conda binaries, for any other value only generate them without uploading.'
        required: true
        default: 'true'

jobs:
    generate-non-periodical-conda-packages:
        name: "Generate non-periodical conda packages @${{ matrix.os }}"
        runs-on:  ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
              include:
                - os: ubuntu-22.04
                  conda_platform: linux-64
                - os: macos-14
                  conda_platform: osx-arm64
                - os: windows-2022
                  conda_platform: win-64

        steps:
        - uses: actions/checkout@v4

        - uses: conda-incubator/setup-miniconda@v3
          with:
            miniforge-variant: Miniforge3
            miniforge-version: latest

        - name: Dependencies for conda recipes generation and upload
          shell: bash -l {0}
          run: |
            conda install pyyaml jinja2 rattler-build ninja anaconda-client conda-forge-pinning multisheller pixi

        - name: Print used environment
          shell: bash -l {0}
          run: |
            conda list
            env

        - name: Build conda packages
          shell: bash -l {0}
          run: |
            conda config --remove channels defaults
            conda config --env --set channel_priority strict
            cd conda
            rattler-build build --recipe-dir ./non_periodical_recipes -m ${CONDA_PREFIX}/conda_build_config.yaml -m ${GITHUB_WORKSPACE}/conda/conda_build_config.yml

        - name: Upload conda packages
          shell: bash -l {0}
          # Upload by default on schedule events, and on workflow dispatch only if input upload_conda_binaries is 'true'
          if: (github.event_name == 'workflow_dispatch' && github.event.inputs.upload_conda_binaries == 'true')
          env:
            ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
            PREFIX_DEV_TOKEN: ${{ secrets.PREFIX_DEV_TOKEN }}
          run: |
            cd ${CONDA_PREFIX}/conda-bld/${{ matrix.conda_platform}}/
            ls *.conda
            anaconda upload --skip-existing *.conda
            pixi auth login https://prefix.dev --token $PREFIX_DEV_TOKEN
            for condapackage in *.conda; do
              pixi upload https://prefix.dev/api/v1/upload/robotology "$condapackage"
            done
            pixi auth logout https://prefix.dev
