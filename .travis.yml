dist: trusty
language: cpp
services: docker

os: linux

cache:
  directories:
    - $HOME/.ccache
    - $HOME/Library/Caches/Homebrew

stages:
  - test # Default stage with job matrix
  - osx

compiler:
  - gcc
  - clang

env:
  global:
    - TRAVIS_CMAKE_GENERATOR="Unix Makefiles"
  matrix:
    - TRAVIS_BUILD_TYPE="Release" UBUNTU="xenial", ROBOTOLOGY_ENABLE_DYNAMICS=TRUE
    - TRAVIS_BUILD_TYPE="Debug" UBUNTU="xenial", ROBOTOLOGY_ENABLE_DYNAMICS=TRUE
    - TRAVIS_BUILD_TYPE="Release" UBUNTU="bionic", ROBOTOLOGY_ENABLE_DYNAMICS=TRUE
    - TRAVIS_BUILD_TYPE="Debug" UBUNTU="bionic", ROBOTOLOGY_ENABLE_DYNAMICS=TRUE

# ===================
# STAGE: test (linux)
# ===================

before_script:
  - docker pull ubuntu:$UBUNTU

script:
  - >-
    docker run -it \
      -v $TRAVIS_BUILD_DIR:$TRAVIS_BUILD_DIR \
      -v $HOME/.ccache:$HOME/.ccache \
      -w $TRAVIS_BUILD_DIR \
      --env CC \
      --env CXX \
      --env TRAVIS_BUILD_DIR \
      --env TRAVIS_BUILD_TYPE \
      --env TRAVIS_CMAKE_GENERATOR \
      ubuntu:$UBUNTU \
      sh .ci/install_debian_and_script.sh

# ==========
# STAGE: osx
# ==========

stage_osx:
  install: &osx_install
    - export PATH="/usr/local/opt/ccache/libexec:$PATH"
    - export ROBOTOLOGY_ENABLE_DYNAMICS=FALSE
    addons:
      homebrew:
        packages:
        - ccache
        - ace
        - asio
        - eigen
        - boost
        - tinyxml
        - swig
        - qt5
        - gsl
        - pkg-config
        - jpeg
        - sqlite
        - tinyxml
        - gazebo9
        update: true
        
    - export Qt5_DIR=/usr/local/opt/qt5/lib/cmake/Qt5


      
    # Setup ccache
    # - brew update
    # - brew install ccache
    #- export PATH="/usr/local/opt/ccache/libexec:$PATH"
    #- export ROBOTOLOGY_ENABLE_DYNAMICS=FALSE
    # Install dependencies available from Homebrew/core
    # - brew install ace asio eigen boost tinyxml swig qt5 gsl pkg-config jpeg sqlite tinyxml
    # - export Qt5_DIR=/usr/local/opt/qt5/lib/cmake/Qt5
    # Workaround for https://github.com/travis-ci/travis-ci/issues/8826
    - brew cask uninstall oclint
    # Install Gazebo
    - brew tap osrf/simulation
    # - brew install gazebo9
    # Install beautifier for Xcode output 
    - gem install xcpretty-travis-formatter
  script: &osx_script
    - cd $TRAVIS_BUILD_DIR/.ci
    - sh -c 'sh ./script.sh'
  script: &osx_script_xcode
    - cd $TRAVIS_BUILD_DIR/.ci
    - sh -c 'sh ./script.sh | xcpretty -f `xcpretty-travis-formatter`'

# ======================
# BUILD JOBS FROM STAGES
# ======================

jobs:
  include:
    # ---------
    # STAGE OSX
    # ---------
    - &osx_template
      stage: osx
      os: osx
      osx_image: xcode9.4
      before_install: skip
      install: *osx_install
      before_script: skip
      script: *osx_script_xcode
      after_failure: skip
      after_success: skip
      after_script: skip
      env:
        TRAVIS_CMAKE_GENERATOR="Xcode"
        TRAVIS_BUILD_TYPE="Debug"
# Disabled for now
#    - <<: *osx_template
#      script: *osx_script
#      compiler: clang
#      env:
#        TRAVIS_CMAKE_GENERATOR="Unix Makefiles"
#        TRAVIS_BUILD_TYPE="Debug"


notifications:
  email:
    # CORE, DYNAMICS mantainer
    - pegua1@gmail.com
    # IHMC mantainer
    - gabriele.nava@mail.polimi.it
